from django.db import models

class CombiAnalyticsTable(models.Model):

    class Meta:
        db_table = 'combi_analytics_table'
    
#    id = models.TextField()
    address = models.TextField()
    run = models.TextField()
    plate = models.TextField()
    dev_or_prod = models.TextField()
    exp_workflow_barcode = models.TextField()
    exp_workflow_name = models.TextField()
    proj_barcode = models.TextField()
    proj_name = models.TextField()
    ctrl_type = models.TextField()
    exp_condition = models.TextField()
    enzyme_barcode = models.TextField()
    sequence = models.TextField()
    hamming = models.IntegerField()
    mutations = models.TextField()
    reference_enzyme = models.TextField()
    enzyme_concentration = models.FloatField()
    enzyme_unit = models.TextField()
    enzyme_class = models.TextField()
    sequence_qc = models.TextField()
    substrate_barcode = models.TextField()
    substrate_concentration = models.FloatField()
    substrate_unit = models.TextField()
    substrate_smiles = models.TextField()
    substrate_mz = models.TextField()
    product_smiles = models.TextField()
    product_mz = models.FloatField()
    pk_0_mz = models.FloatField()
    isotope_score = models.FloatField()
    pk_sub_raw = models.FloatField()
    pk_sub_raw_ref = models.FloatField()
    pk_prod_raw = models.FloatField()
    pk_prod_raw_ref = models.FloatField()
    pk_0_raw = models.FloatField()
    pk_0_raw_ref = models.FloatField()
    pk_mtx_172_raw = models.FloatField()
    pk_mtx_190_raw = models.FloatField()
    pk_mtx_379_raw = models.FloatField()
    pk_sub_stdz_379 = models.FloatField()
    pk_sub_stdz_190 = models.FloatField()
    pk_sub_stdz_172 = models.FloatField()
    pk_prod_stdz_379 = models.FloatField()
    pk_prod_stdz_190 = models.FloatField()
    pk_prod_stdz_172 = models.FloatField()
    pk_0_stdz_379 = models.FloatField()
    pk_0_stdz_190 = models.FloatField()
    pk_0_stdz_172 = models.FloatField()
    ptr = models.FloatField()
    psr = models.FloatField()
    tstat_pk_sub_stdz_379 = models.FloatField()
    tstat_pk_sub_stdz_190 = models.FloatField()
    tstat_pk_sub_stdz_172 = models.FloatField()
    tstat_pk_prod_stdz_379 = models.FloatField()
    tstat_pk_prod_stdz_190 = models.FloatField()
    tstat_pk_prod_stdz_172 = models.FloatField()
    tstat_pk_0_stdz_379 = models.FloatField()
    tstat_pk_0_stdz_190 = models.FloatField()
    tstat_pk_0_stdz_172 = models.FloatField()
    tstat_ptr = models.FloatField()
    tstat_psr = models.FloatField()
    tstat_multi = models.FloatField()
    spectra_ids_ref = models.TextField()
    spectra_ids = models.TextField()
    succinimide_bool = models.BooleanField()
    tertiary_amide_bool = models.BooleanField()
    repo_sha = models.TextField()
    parameters = models.TextField()
    rxn_smarts = models.TextField()
    retro_rules_id = models.TextField()
    true_score_binary = models.FloatField()
    true_score_nonbinary = models.FloatField()
    model_score_binary = models.FloatField()
    model_score_nonbinary = models.FloatField()
    timestamp = models.TextField()
    source_plate = models.TextField()
    source_address = models.TextField()
    expression_condition = models.TextField()
    screen_condition = models.TextField()
    acq_condition = models.TextField()
    seed_address = models.TextField()
    seed_address_alphanumeric = models.TextField()
    seed_plate = models.TextField()
    main_plate = models.TextField()
    rxn_plate = models.TextField()
    library_barcode = models.TextField()
    library_ref = models.TextField()
    library_description = models.TextField()
    seed_plate_time = models.TextField()
    main_plate_time = models.TextField()
    rxn_plate_time = models.TextField()
    plate_time = models.TextField()
    pellet_OD = models.FloatField()
    pellet_detected = models.BooleanField()
    pellet_area = models.FloatField()
    pellet_intensity = models.FloatField()
